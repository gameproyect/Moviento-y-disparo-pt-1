import arcade
import random
import os

SPRITE_SCALING_NAVE = 0.2
SPRITE_SCALING_ENEMY = 0.1
SPRITE_SCALING_BULLET = 0.5
MOVEMENT_SPEED = 3
ENEMY_COUNT = 50

SCREEN_WIDTH = 1200
SCREEN_HEIGHT = 800
SCREEN_TITLE = "HOLLOW RIDERS"

BULLET_SPEED = 5

def bordes():
    arcade.draw_lrtb_rectangle_filled(0, 300, 800, 0, arcade.csscolor.BLUE)
    arcade.draw_lrtb_rectangle_filled(900, 1200, 800, 0, arcade.csscolor.BLUE)

class nave(arcade.Sprite):
    def update(self):
        self.center_x += self.change_x
        self.center_y += self.change_y

        if self.left < 301:
            self.left = 301
        elif self.right > 900 - 1:
            self.right = 900 - 1
        if self.bottom < 0:
            self.bottom = 0
        elif self.top > 400 - 1:
            self.top = 400 - 1

class MyGame(arcade.Window):
    def __init__(self):
        super().__init__(SCREEN_WIDTH, SCREEN_HEIGHT, SCREEN_TITLE)

        file_path = os.path.dirname(os.path.abspath(__file__))
        os.chdir(file_path)

        self.nave_list = None
        self.enemy_list = None
        self.bullet_list = None
        self.nave_sprite = None
        self.score = 0

        self.set_mouse_visible(False)
        self.gun_sound = arcade.load_sound(":resources:sounds/hurt5.wav")
        self.hit_sound = arcade.load_sound(":resources:sounds/hit5.wav")
        arcade.set_background_color(arcade.color.BLACK)

    def setup(self):
        self.nave_list = arcade.SpriteList()
        self.enemy_list = arcade.SpriteList()
        self.bullet_list = arcade.SpriteList()
        self.score = 0
        self.nave_sprite = arcade.Sprite(":resources:images/practicas/nave.png", SPRITE_SCALING_NAVE)"""aqui es donde tengo yo los archivos no se donde los tendreis vosotros"""
        self.nave_sprite.center_x = 600
        self.nave_sprite.center_y = 75
        self.nave_list.append(self.nave_sprite)

        for i in range(ENEMY_COUNT):
            enemy = arcade.Sprite(":resources:images/practicas/enemy.png", SPRITE_SCALING_ENEMY)"""aqui es donde tengo yo los archivos no se donde los tendreis vosotros"""
            enemy.center_x = random.randrange(340, 840)
            enemy.center_y = random.randrange(400, SCREEN_HEIGHT)
            self.enemy_list.append(enemy)
        arcade.set_background_color(arcade.color.BLACK)

    def on_draw(self):
        arcade.start_render()

        bordes()
        self.enemy_list.draw()
        self.bullet_list.draw()
        self.nave_list.draw()

        arcade.draw_text(f"Score: {self.score}" , 10, 20, arcade.color.WHITE, 14)

    def on_key_press(self, key, modifiers):
        if key == arcade.key.W:
            self.nave_sprite.change_y = MOVEMENT_SPEED
        elif key == arcade.key.S:
            self.nave_sprite.change_y = -MOVEMENT_SPEED
        elif key == arcade.key.A:
            self.nave_sprite.change_x = -MOVEMENT_SPEED
        elif key == arcade.key.D:
            self.nave_sprite.change_x = MOVEMENT_SPEED

    def on_key_release(self, key, modifiers):
        if key == arcade.key.W or key == arcade.key.S:
            self.nave_sprite.change_y = 0
        elif key == arcade.key.A or key == arcade.key.D:
            self.nave_sprite.change_x = 0


    def on_mouse_press(self, x, y, button, modifiers):
        arcade.play_sound(self.gun_sound)
        bullet = arcade.Sprite(":resources:images/space_shooter/laserBlue01.png", SPRITE_SCALING_BULLET)
        bullet.angle = 90
        bullet.change_y = BULLET_SPEED
        bullet.center_x = self.nave_sprite.center_x
        bullet.bottom = self.nave_sprite.top
        self.bullet_list.append(bullet)

    def on_update(self, delta_time):
        self.bullet_list.update()
        self.nave_list.update()
        for bullet in self.bullet_list:
            hit_list = arcade.check_for_collision_with_list(bullet, self.enemy_list)
            if len(hit_list) > 0:
                bullet.remove_from_sprite_lists()
                self.score += 1
                arcade.play_sound(self.hit_sound)
            if bullet.bottom > SCREEN_HEIGHT:
                bullet.remove_from_sprite_lists()

def main():
    window = MyGame()
    window.setup()
    arcade.run()

if __name__ == "__main__":
    main()
